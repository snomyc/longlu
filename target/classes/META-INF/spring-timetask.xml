<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd"
    default-lazy-init="false">
	
	
    <description>定时任务 配置</description>
    
    <!-- 创建定时任务线程池 -->
<!-- 	<task:executor id="executor" pool-size="5" />
    <task:scheduler id="scheduler" pool-size="10" />
    <task:annotation-driven executor="executor" scheduler="scheduler" /> -->
    
	<!-- 定时任务 -->
	<!-- 配置任务类 -->
	<bean id="tradeDetailTimeTask" class="com.longlu.timetask.TradeDetailTimeTask" autowire="byName">
	</bean>
	<!-- 配置作业类  从有赞API获取已付款订单列表 -->
	<bean id="tradeDetailTimeTaskJob"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<!-- 定时任务类对象 -->
		<property name="targetObject" ref="tradeDetailTimeTask" />
		<!-- 定时任务类方法 -->
		<property name="targetMethod" value="getPaymentOrdersToYouZan" />
		<!-- <property name="targetMethod" value="getTradeSuccessOrdersToYouZan" /> -->
		<property name="concurrent" value="false" />  
	</bean>
	
	<!-- 配置作业调度的触发方式 -->
	<!-- 按照一定的频度触发-->
	<bean id="simpleTradeDetailTimeTaskTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">  
		<property name="jobDetail" ref="tradeDetailTimeTaskJob" />  
		<property name="startDelay" value="30000" /> <!-- 调度工厂实例化后，经过0秒开始执行调度     -->
		<property name="repeatInterval" value="600000" />  <!-- 每10分钟(60000=1min)调度一次     -->
	</bean>
	
	
	<!-- 配置作业类  从有赞API获取已交易成功订单列表 -->
	<bean id="tradeDetailTimeTaskJob2"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		<!-- 定时任务类对象 -->
		<property name="targetObject" ref="tradeDetailTimeTask" />
		<!-- 定时任务类方法 -->
		<property name="targetMethod" value="getTradeSuccessOrdersToYouZan" />
		<property name="concurrent" value="false" />  
	</bean>
	
		<!-- 到指定时间运行一次 -->
	<bean id="cronTradeDetailTimeTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
		<property name="jobDetail" ref="tradeDetailTimeTaskJob2" />
		<!-- 每天凌晨2:00运行一次   -->
		<property name="cronExpression" value="0 0 2,13,18 * * ?" />
		<!-- <property name="cronExpression" value="0 0/5 * * * ?" /> -->
	</bean>
	
	
	
	<!-- 易多多定时任务 每天10点，14点，18点，22点 发送订单邮件-->
	<!-- <bean id="tradeDetailTimeTaskJob3"  class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
		定时任务类对象
		<property name="targetObject" ref="tradeDetailTimeTask" />
		定时任务类方法
		<property name="targetMethod" value="getOtherYouZanTradeDetailToExcel" />
		<property name="concurrent" value="false" />  
	</bean> -->
	
	<!-- 到指定时间运行一次 -->
<!-- 	<bean id="cronTradeDetailTimeTaskTrigger3" class="org.springframework.scheduling.quartz.CronTriggerBean">  
		<property name="jobDetail" ref="tradeDetailTimeTaskJob3" />
		<property name="cronExpression" value="57 59 9,13,17,23 * * ?" />
	</bean> -->
	
	
	<!-- 配置调度工厂 -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
		<property name="triggers">  
		<list>  
			<ref bean="simpleTradeDetailTimeTaskTrigger" />
			<ref bean="cronTradeDetailTimeTaskTrigger" />
			<!-- <ref bean="cronTradeDetailTimeTaskTrigger3" /> -->
			<!-- <ref bean="simpleTradeDetailTimeTaskTrigger2" /> -->
		</list>  
	</property>  
	</bean>
	
	
	<!-- Spring-Task 轻量级定时任务 -->
<!-- 	<bean id="sysTask" class="com.longlu.timetask.SysTask" />
 	<task:scheduled-tasks>
		<task:scheduled ref="sysTask" method="sync" cron="0 0 13 * * ?" />
	</task:scheduled-tasks> -->
	
	<!-- 订单审批邮件推送  每2小时推送一次-->
	<bean id="pushOrderTask" class="com.longlu.timetask.PushOrderTask" />
 	<task:scheduled-tasks>
		<task:scheduled ref="pushOrderTask" method="sync" cron="0 0 8,10,12,14,16,18 ? * MON-FRI" />
		<!-- <task:scheduled ref="pushOrderTask" method="sync" cron="0/30 * * ? * MON-FRI" /> -->
	</task:scheduled-tasks>
	
	<task:annotation-driven />
	<!-- 按照一定的频度触发-->
<!-- 	<bean id="simpleTradeDetailTimeTaskTrigger2" class="org.springframework.scheduling.quartz.SimpleTriggerBean">  
		<property name="jobDetail" ref="tradeDetailTimeTaskJob2" />  
		<property name="startDelay" value="60000" /> 调度工厂实例化后，经过0秒开始执行调度    
		<property name="repeatInterval" value="3600000" />  每10分钟(60000=1min)调度一次    
	</bean> -->
	
	<!-- 到指定时间运行一次 -->
<!-- 	<bean id="cronTradeDetailTimeTaskTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">  
		<property name="jobDetail" ref="tradeDetailTimeTaskJob" />
		每天22:00运行一次  
		<property name="cronExpression" value="0 0 22 * * ?" />  
	</bean> -->
	
</beans>